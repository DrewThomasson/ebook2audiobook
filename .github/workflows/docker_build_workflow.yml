name: Build and Push Docker Image

on:
  workflow_dispatch: # Allows manual trigger
  release:
    types: [published] # Triggers automatically when a new release is published

jobs:
  build:
    runs-on: [self-hosted] # [self-hosted, ubuntu-latest] Attempts self-hosted first, then falls back to ubuntu-latest
    
    steps:
      - name: Install Docker
        run: |
          # Check if Docker is installed
          if ! command -v docker &> /dev/null; then
            # Update package lists
            sudo apt-get update
            
            # Install dependencies
            sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
            
            # Add Docker's official GPG key
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
            
            # Set up the stable repository
            sudo add-apt-repository \
              "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
              $(lsb_release -cs) \
              stable"
            
            # Install Docker CE
            sudo apt-get update
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io
            
            # Add current user to docker group
            sudo usermod -aG docker $USER
          fi

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
          driver: docker-container
          buildkitd-flags: --allow-insecure-entitlement security.insecure --allow-insecure-entitlement network.host

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get Git Commit Hash
        run: echo "GIT_HASH=$(git rev-parse --short=9 HEAD)" >> $GITHUB_ENV

      - name: Get Latest Release Tag
        id: get_tag
        run: |
          TAG=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)
          echo "RELEASE_TAG=$TAG" >> $GITHUB_ENV

      - name: Build and Push Docker image for multiple architectures
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 \
          -t ${{ secrets.DOCKER_USERNAME }}/ebook2audiobook:latest \
          -t ${{ secrets.DOCKER_USERNAME }}/ebook2audiobook:${{ env.GIT_HASH }} \
          -t ${{ secrets.DOCKER_USERNAME }}/ebook2audiobook:${{ env.RELEASE_TAG }} \
          --push .
