name: Coqui-TTS Workflow
on:
  push:
    branches:
      - act-trigger
  workflow_dispatch:
jobs:
  run-tts:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install coqui-tts torch requests
      
      - name: Download Speaker WAV
        run: |
          mkdir -p voices
          wget https://github.com/DrewThomasson/ebook2audiobook/raw/main/voices/eng/adult/male/AiExplained_16000.wav -O voices/speaker.wav
      
      - name: Run TTS script
        run: |
          python - <<EOF
          import torch
          import os
          from TTS.api import TTS

          # By using XTTS you agree to CPML license https://coqui.ai/cpml
          os.environ["COQUI_TOS_AGREED"] = "1"

          
          device = "cuda" if torch.cuda.is_available() else "cpu"
          tts = TTS("tts_models/multilingual/multi-dataset/xtts_v2").to(device)
          
          speaker_wav = "voices/speaker.wav"

          # TTS with list of amplitude values as output, clone the voice from `speaker_wav`
          wav = tts.tts(
            text="Hello world!",
            speaker_wav="voices/speaker.wav",
            language="en"
          )

          

          # TTS to a file, use a preset speaker
          tts.tts_to_file(
            text="Hello world!",
            speaker="Craig Gutsy",
            language="en",
            file_path="output.wav"
          )

          EOF


      - name: Verify WAV file creation
        run: |
          if [ -f "output.wav" ]; then
            echo "WAV file created successfully."
          else
            echo "WAV file not found!" && exit 1
          fi

