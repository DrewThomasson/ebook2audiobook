name: Run Docker and Upload Audiobooks

on:
  workflow_dispatch:
    inputs:
      docker_tag:
        description: "Docker tag to use"
        required: true
        default: "latest"

jobs:
  run-and-upload:
    runs-on: [self-hosted, Linux, ARM64]
    steps:
      - name: Create output directory with proper structure
        run: |
          mkdir -p /tmp/audiobooks/cli
          chmod 777 -R /tmp/audiobooks

      - name: Run Docker container with volume mount
        run: |
          docker run --rm \
            -v /tmp/audiobooks:/app/audiobooks \
            ${{ secrets.DOCKER_USERNAME }}/ebook2audiobook:${{ github.event.inputs.docker_tag }} \
            --headless --script_mode full_docker \
            --language eng \
            --ebook "tools/workflow-testing/test1.txt" \
            --tts_engine fairseq

      - name: Verify output files exist
        run: |
          find /tmp/audiobooks -type f | sort
          if [ -d /tmp/audiobooks ] && [ "$(find /tmp/audiobooks -type f)" ]; then
            echo "✅ Output files generated successfully:"
            ls -la /tmp/audiobooks
            ls -la /tmp/audiobooks/cli || echo "cli directory not found"
          else
            echo "❌ No output files found in /tmp/audiobooks!"
            exit 1
          fi

      - name: Create ZIP archive and upload
        run: |
          cd /tmp
          echo "=== Creating ZIP archive ==="
          zip -r audiobooks.zip audiobooks
          
          echo "=== ZIP contents ==="
          unzip -l audiobooks.zip
          
          if [[ -s "audiobooks.zip" ]]; then
            echo "=== Uploading audiobooks.zip ==="
            UPLOAD_URL=$(curl -F "file=@audiobooks.zip" https://0x0.st)
            echo "✅ Upload complete! File available at: $UPLOAD_URL"
          else
            echo "❌ ZIP archive is empty!"
            exit 1
          fi
