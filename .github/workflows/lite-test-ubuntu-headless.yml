name: XTTS Model Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  test_xtts_model:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc g++ make wget git calibre ffmpeg libmecab-dev mecab mecab-ipadic-utf8 libsndfile1-dev libc-dev curl espeak-ng sox
          curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
          sudo apt-get install -y nodejs
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install UniDic
        run: |
          pip install --no-cache-dir unidic-lite unidic
          python3 -m unidic download
          mkdir -p $HOME/.local/share/unidic
          echo "UNIDIC_DIR=$HOME/.local/share/unidic" >> $GITHUB_ENV

      - name: Extract PyTorch versions from requirements.txt
        id: pytorch-versions
        run: |
          TORCH_VERSION_REQ=$(grep -E "^torch==" requirements.txt | cut -d'=' -f3)
          TORCHAUDIO_VERSION_REQ=$(grep -E "^torchaudio==" requirements.txt | cut -d'=' -f3)
          TORCHVISION_VERSION_REQ=$(grep -E "^torchvision==" requirements.txt | cut -d'=' -f3)
          echo "torch_version=$TORCH_VERSION_REQ" >> $GITHUB_OUTPUT
          echo "torchaudio_version=$TORCHAUDIO_VERSION_REQ" >> $GITHUB_OUTPUT
          echo "torchvision_version=$TORCHVISION_VERSION_REQ" >> $GITHUB_OUTPUT
          echo "Found in requirements: torch==$TORCH_VERSION_REQ torchaudio==$TORCHAUDIO_VERSION_REQ torchvision==$TORCHVISION_VERSION_REQ"

      - name: Install PyTorch (CPU version for CI)
        run: |
          TORCH_VERSION_REQ=${{ steps.pytorch-versions.outputs.torch_version }}
          TORCHAUDIO_VERSION_REQ=${{ steps.pytorch-versions.outputs.torchaudio_version }}
          TORCHVISION_VERSION_REQ=${{ steps.pytorch-versions.outputs.torchvision_version }}
          pip install --no-cache-dir torch==${TORCH_VERSION_REQ} torchvision==${TORCHVISION_VERSION_REQ} torchaudio==${TORCHAUDIO_VERSION_REQ} --extra-index-url https://download.pytorch.org/whl/cpu

      - name: Install remaining requirements
        run: |
          grep -v -E "^torch==|^torchvision==|^torchaudio==" requirements.txt > requirements_no_torch.txt
          pip install --no-cache-dir --upgrade -r requirements_no_torch.txt

      - name: Run XTTS model test
        run: |
          echo "This is a test sentence." > test.txt
          python app.py --headless --ebook test.txt --script_mode full_docker
          rm test.txt

      - name: Test complete
        run: echo "XTTS model test completed successfully"
