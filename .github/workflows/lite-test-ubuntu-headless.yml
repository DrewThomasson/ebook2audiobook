name: Run Docker and Upload Audiobooks

on:
  workflow_dispatch:
    inputs:
      docker_tag:
        description: "Docker tag to use"
        required: true
        default: "latest"

jobs:
  run-and-upload:
    runs-on: [self-hosted, Linux, ARM64]

    steps:
      - name: Create output directory and set permissions
        run: |
          mkdir -p /tmp/audiobooks/cli
          chmod 777 -R /tmp/audiobooks

      - name: Run Docker container with volume mount
        run: |
          docker run --rm \
            -v /tmp/audiobooks:/app/audiobooks \
            ${{ secrets.DOCKER_USERNAME }}/ebook2audiobook:${{ github.event.inputs.docker_tag }} \
            --headless --script_mode full_docker \
            --language eng \
            --ebook "tools/workflow-testing/test1.txt" \
            --tts_engine fairseq

      - name: Check if files were copied
        run: |
          if [ -d /tmp/audiobooks ] && [ "$(ls -A /tmp/audiobooks)" ]; then
            echo "Files copied successfully:"
            ls -l /tmp/audiobooks
          else
            echo "No files found in /tmp/audiobooks!"
            exit 1
          fi
      
      - name: Upload newest audiobook file
        shell: bash
        run: |
          newest=$(ls -t /tmp/audiobooks/* 2>/dev/null | head -n1)
          if [[ -f "$newest" ]]; then
            echo "Uploading newest file: $newest"
            curl -F "file=@$newest" https://0x0.st
          else
            echo "No audiobook file found to upload!"
            exit 1
          fi



#      - name: Upload all audiobook files
#        run: |
#          for file in /tmp/audiobooks/*; do
#            if [ -f "$file" ]; then
#              echo "Uploading $file"
#              curl -F "file=@$file" https://0x0.st
#            else
#              echo "Skipping non-file: $file"
#            fi
#          done
